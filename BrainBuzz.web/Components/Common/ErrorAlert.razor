@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert @AlertClass alert-dismissible fade show" role="alert">
        <i class="@IconClass me-2"></i>
        @Message
        @if (ShowDismiss)
        {
            <button type="button" class="btn-close" @onclick="Dismiss" aria-label="Close"></button>
        }
    </div>
}

@code {
    [Parameter] public string Message { get; set; } = string.Empty;
    [Parameter] public AlertType Type { get; set; } = AlertType.Info;
    [Parameter] public bool ShowDismiss { get; set; } = true;
    [Parameter] public EventCallback OnDismiss { get; set; }

    private string AlertClass => Type switch
    {
        AlertType.Success => "alert-success",
        AlertType.Warning => "alert-warning",
        AlertType.Error => "alert-danger",
        AlertType.Info => "alert-info",
        _ => "alert-info"
    };

    private string IconClass => Type switch
    {
        AlertType.Success => "fas fa-check-circle",
        AlertType.Warning => "fas fa-exclamation-triangle",
        AlertType.Error => "fas fa-exclamation-circle",
        AlertType.Info => "fas fa-info-circle",
        _ => "fas fa-info-circle"
    };

    private async Task Dismiss()
    {
        Message = string.Empty;
        await OnDismiss.InvokeAsync();
    }

    public enum AlertType
    {
        Success,
        Warning,
        Error,
        Info
    }
}
