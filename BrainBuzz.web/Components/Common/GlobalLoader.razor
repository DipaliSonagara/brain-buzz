@using BrainBuzz.web.Services
@using System.ComponentModel
@inject ILoadingService LoadingService
@implements IDisposable

@if (LoadingService.IsLoading)
{
    <div class="global-loader-overlay">
        <div class="global-loader-container">
            <div class="global-loader-content">
                <!-- Spinner Animation -->
                <div class="loader-spinner">
                    <div class="spinner-ring"></div>
                    <div class="spinner-ring"></div>
                    <div class="spinner-ring"></div>
                </div>
                
                <!-- Loading Message -->
                <div class="loader-message">
                    <h3 class="loader-title">@LoadingService.LoadingMessage</h3>
                    @if (LoadingService.LoadingPercentage > 0)
                    {
                        <div class="loader-progress">
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: @LoadingService.LoadingPercentage%"></div>
                            </div>
                            <span class="progress-text">@LoadingService.LoadingPercentage%</span>
                        </div>
                    }
                </div>
                
                <!-- Loading Dots Animation -->
                <div class="loader-dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected override void OnInitialized()
    {
        LoadingService.PropertyChanged += OnLoadingStateChanged;
    }

    private void OnLoadingStateChanged(object? sender, PropertyChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LoadingService.PropertyChanged -= OnLoadingStateChanged;
    }
}
