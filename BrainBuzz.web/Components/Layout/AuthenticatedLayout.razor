@using BrainBuzz.web.Components.Layout
@using BrainBuzz.web.Components.Common
@using BrainBuzz.web.Services
@using BrainBuzz.web.Constants
@inject AuthenticationService AuthService
@inject NavigationManager Navigation

@if (isLoading)
{
    <LoadingSpinner Message="@LoadingMessage" />
}
else if (isAuthenticated)
{
    <div class="dashboard-container">
        <div class="dashboard-layout">
            <!-- Mobile Overlay -->
            @if (isMobileMenuOpen)
            {
                <div class="mobile-overlay" @onclick="ToggleMobileMenu"></div>
            }
            
            <!-- Sidebar -->
            <NavMenu IsMobileMenuOpen="isMobileMenuOpen" OnMobileMenuToggle="ToggleMobileMenu"></NavMenu>

            <!-- Main content -->
            <main class="dashboard-main">
                <div class="dashboard-header">
                    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center">
                        <div class="d-flex align-items-center">
                            <button class="mobile-menu-toggle d-md-none me-3" @onclick="ToggleMobileMenu">
                                <i class="fas fa-bars"></i>
                            </button>
                            <h1>@PageTitle</h1>
                        </div>
                        <div class="btn-toolbar">
                            <div class="btn-group me-2">
                                <span class="text-muted">@string.Format(AppConstants.UIText.Welcome, currentUser)</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="dashboard-content fade-in">
                    @if (ChildContentWithUser != null)
                    {
                        @ChildContentWithUser(currentUser)
                    }
                    else if (ChildContent != null)
                    {
                        @ChildContent
                    }
                </div>
            </main>
        </div>
    </div>
}
else
{
    <!-- Show nothing while redirecting to access denied -->
    <div style="display: none;"></div>
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment<string>? ChildContentWithUser { get; set; }
    [Parameter] public string PageTitle { get; set; } = "Dashboard";
    [Parameter] public string LoadingMessage { get; set; } = AppConstants.UIText.LoadingDashboard;
    
    private string currentUser = "";
    private bool isLoading = true;
    private bool isAuthenticated = false;
    private bool isMobileMenuOpen = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var authResult = await AuthService.CheckAuthenticationAsync();
            isAuthenticated = authResult.IsAuthenticated;
            currentUser = authResult.Username;
            isLoading = false;
            
            if (!isAuthenticated)
            {
                Navigation.NavigateTo(AppConstants.Routes.AccessDenied, forceLoad: true);
                return;
            }
            
            StateHasChanged();
        }
    }

    private void ToggleMobileMenu()
    {
        isMobileMenuOpen = !isMobileMenuOpen;
        StateHasChanged();
    }
}
