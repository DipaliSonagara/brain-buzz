@page "/quiz/{quizId:int}"
@using BrainBuzz.web.Data
@using BrainBuzz.web.Models.DbTable
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context
@inject NavigationManager Navigation

<PageTitle>Quiz - @quiz?.QuizName</PageTitle>

<div class="container-fluid dashboard-container">
    <div class="row flex-nowrap">
        <!-- Sidebar -->
        <div class="col-md-2 col-lg-2">
            <div class="sidebar">
                <div class="position-sticky pt-3">
                    <!-- Logo/Brand -->
                    <div class="text-center mb-4">
                        <a href="/dashboard" class="brand-link">
                            <div class="logo">🎯 BrainBuzz</div>
                        </a>
                    </div>

                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/dashboard/overview">
                                <i class="fas fa-home"></i> Overview
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/dashboard/quizzes">
                                <i class="fas fa-question-circle"></i> Quizzes
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/dashboard/results">
                                <i class="fas fa-chart-bar"></i> Results
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link" href="/dashboard/profile">
                                <i class="fas fa-user"></i> Profile
                            </NavLink>
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Main content -->
        <div class="col-md-10 col-lg-10">
            <main class="dashboard-main">
                <!-- Dashboard Header -->
                <div class="dashboard-header">
                    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center">
                        <h1>@quiz?.QuizName Quiz</h1>
                        <div class="btn-toolbar">
                            <div class="btn-group me-2">
                                <button @onclick="GoToDashboard" class="btn-dashboard secondary">
                                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Quiz Progress -->
                    @if (!showResults && questions?.Count > 0)
                    {
                        <div class="quiz-progress mt-3">
                            <div class="progress-info">
                                <span>Question @(currentQuestionIndex + 1) of @questions.Count</span>
                                <span class="time-remaining" id="timeRemaining">Time: 15:00</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill" style="width: @((currentQuestionIndex + 1) * 100.0 / questions.Count)%"></div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Dashboard Content -->
                <div class="dashboard-content fade-in">
                    @if (questions == null)
                    {
                        <div class="loading-container">
                            <div class="content-card">
                                <div class="content-card-body text-center">
                                    <div class="spinner"></div>
                                    <p>Loading questions...</p>
                                </div>
                            </div>
                        </div>
                    }
                    else if (showResults)
                    {
                        <div class="results-container">
                            <div class="content-card results-card">
                                <div class="content-card-body text-center">
                                    <div class="results-icon">🎉</div>
                                    <h2 class="results-title">Quiz Complete!</h2>
                                    <div class="score-display">
                                        <div class="score-circle">
                                            <span class="score-number">@finalScore</span>
                                            <span class="score-total">/@questions.Count</span>
                                        </div>
                                    </div>
                                    <p class="score-percentage">@(Math.Round((double)finalScore / questions.Count * 100, 1))% Correct</p>
                                    <div class="results-actions">
                                        <button @onclick="RetakeQuiz" class="btn-dashboard primary">Retake Quiz</button>
                                        <button @onclick="GoToDashboard" class="btn-dashboard secondary">Back to Dashboard</button>
                                    </div>
                                </div>
                            </div>

                            <!-- Answer Review -->
                            <div class="content-card review-card">
                                <div class="content-card-header">
                                    <h3>Review Your Answers</h3>
                                </div>
                                <div class="content-card-body">
                                    @for (int i = 0; i < questions.Count; i++)
                                    {
                                        var q = questions[i];
                                        var isCorrect = !string.IsNullOrEmpty(userAnswers[i]) && userAnswers[i] == q.CorrectOption;
                                        <div class="review-item @(isCorrect ? "correct" : "incorrect")">
                                            <div class="review-question">
                                                <span class="question-number">@(i + 1).</span>
                                                <span class="question-text">@q.QuestionText</span>
                                                <span class="result-icon">@(isCorrect ? "✅" : "❌")</span>
                                            </div>
                                            <div class="review-answers">
                                                <div class="answer-option @(userAnswers[i] == "A" ? (q.CorrectOption == "A" ? "selected correct" : "selected incorrect") : (q.CorrectOption == "A" ? "correct-answer" : ""))">
                                                    A. @q.OptionA
                                                </div>
                                                <div class="answer-option @(userAnswers[i] == "B" ? (q.CorrectOption == "B" ? "selected correct" : "selected incorrect") : (q.CorrectOption == "B" ? "correct-answer" : ""))">
                                                    B. @q.OptionB
                                                </div>
                                                <div class="answer-option @(userAnswers[i] == "C" ? (q.CorrectOption == "C" ? "selected correct" : "selected incorrect") : (q.CorrectOption == "C" ? "correct-answer" : ""))">
                                                    C. @q.OptionC
                                                </div>
                                                <div class="answer-option @(userAnswers[i] == "D" ? (q.CorrectOption == "D" ? "selected correct" : "selected incorrect") : (q.CorrectOption == "D" ? "correct-answer" : ""))">
                                                    D. @q.OptionD
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <EditForm OnValidSubmit="SubmitQuiz" Model="questions">
                            <!-- Question Display -->
                            @if (questions.Count > 0 && currentQuestionIndex < questions.Count)
                            {
                                var currentQuestion = questions[currentQuestionIndex];
                                <div class="question-container fade-in">
                                    <div class="content-card question-card">
                                        <div class="content-card-body">
                                            <div class="question-header">
                                                <span class="question-number">Question @(currentQuestionIndex + 1)</span>
                                                <span class="question-category">@quiz?.QuizName</span>
                                            </div>
                                            <h2 class="question-text">@currentQuestion.QuestionText</h2>

                                            <div class="options-container">
                                                <InputRadioGroup @bind-Value="userAnswers[currentQuestionIndex]">
                                                    <div class="option-item">
                                                        <label class="option-label">
                                                            <InputRadio Value="@("A")" class="option-radio" />
                                                            <span class="option-letter">A</span>
                                                            <span class="option-text">@currentQuestion.OptionA</span>
                                                        </label>
                                                    </div>
                                                    <div class="option-item">
                                                        <label class="option-label">
                                                            <InputRadio Value="@("B")" class="option-radio" />
                                                            <span class="option-letter">B</span>
                                                            <span class="option-text">@currentQuestion.OptionB</span>
                                                        </label>
                                                    </div>
                                                    <div class="option-item">
                                                        <label class="option-label">
                                                            <InputRadio Value="@("C")" class="option-radio" />
                                                            <span class="option-letter">C</span>
                                                            <span class="option-text">@currentQuestion.OptionC</span>
                                                        </label>
                                                    </div>
                                                    <div class="option-item">
                                                        <label class="option-label">
                                                            <InputRadio Value="@("D")" class="option-radio" />
                                                            <span class="option-letter">D</span>
                                                            <span class="option-text">@currentQuestion.OptionD</span>
                                                        </label>
                                                    </div>
                                                </InputRadioGroup>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Navigation Buttons -->
                                    <div class="quiz-navigation">
                                        <div class="nav-buttons">
                                            <button type="button" @onclick="PreviousQuestion"
                                                    class="btn-dashboard secondary"
                                                    disabled="@(currentQuestionIndex == 0)">
                                                ← Previous
                                            </button>

                                            @if (currentQuestionIndex < questions.Count - 1)
                                            {
                                                <button type="button" @onclick="NextQuestion"
                                                        class="btn-dashboard primary">
                                                    Next →
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="submit" class="btn-dashboard success">
                                                    Submit Quiz
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </EditForm>

                        <!-- Question Navigator -->
                        <div class="content-card question-navigator">
                            <div class="content-card-header">
                                <h4>Question Navigator</h4>
                            </div>
                            <div class="content-card-body">
                                <div class="navigator-grid">
                                    @for (int i = 0; i < questions.Count; i++)
                                    {
                                        int questionIndex = i;
                                        <button type="button"
                                                @onclick="() => GoToQuestion(questionIndex)"
                                                class="navigator-btn @(currentQuestionIndex == i ? "active" : "") @(!string.IsNullOrEmpty(userAnswers[i]) ? "answered" : "")">
                                            @(i + 1)
                                        </button>
                                    }
                                </div>
                                <div class="navigator-legend">
                                    <span class="legend-item"><span class="legend-color current"></span> Current</span>
                                    <span class="legend-item"><span class="legend-color answered"></span> Answered</span>
                                    <span class="legend-item"><span class="legend-color unanswered"></span> Unanswered</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </main>
        </div>
    </div>
</div>

@code {
    [Parameter] public int quizId { get; set; }
    private Quizzes quiz;
    private List<Questions> questions = new();
    private List<string> userAnswers = new();
    private int currentQuestionIndex = 0;
    private bool showResults = false;
    private int finalScore = 0;

    protected override async Task OnInitializedAsync()
    {
        quiz = await _context.Quizzes.FindAsync(quizId);
        questions = await _context.Questions
            .Where(q => q.QuizId == quizId)
            .ToListAsync();
        userAnswers = new List<string>(new string[questions.Count]);
    }

    private void NextQuestion()
    {
        if (currentQuestionIndex < questions.Count - 1)
        {
            currentQuestionIndex++;
            StateHasChanged();
        }
    }

    private void PreviousQuestion()
    {
        if (currentQuestionIndex > 0)
        {
            currentQuestionIndex--;
            StateHasChanged();
        }
    }

    private void GoToQuestion(int index)
    {
        currentQuestionIndex = index;
        StateHasChanged();
    }

    private async Task SubmitQuiz()
    {
        finalScore = 0;
        for (int i = 0; i < questions.Count; i++)
        {
            var selected = userAnswers[i];
            var correct = questions[i].CorrectOption;
            if (!string.IsNullOrEmpty(selected) && selected == correct)
            {
                finalScore++;
            }
        }
        showResults = true;
        StateHasChanged();
        Console.WriteLine($"User scored: {finalScore}");
        await Task.CompletedTask;
    }

    private void RetakeQuiz()
    {
        userAnswers = new List<string>(new string[questions.Count]);
        currentQuestionIndex = 0;
        showResults = false;
        finalScore = 0;
        StateHasChanged();
    }

    private void GoToDashboard()
    {
        Navigation.NavigateTo("/dashboard");
    }
}